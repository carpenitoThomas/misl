ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations Results of the MISL imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_wrap(variable ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
?facet_wrap
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations Results of the MISL imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_wrap(variable ~ statistic , scales = "free", ncol = 2) +
theme_bw()
}
traceplot(misl_imp)
load_all()
library(misl)
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean", "Lrnr_ranger"))
system.time(print("tomm"))
system.time(misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean", "Lrnr_ranger"))
)
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
traceplot(misl_imp)
?mice
?mice.impute.myfunc
mice_imp <- mice(misl::nhanes)
plot(mice_imp)
plot(misl_imp)
traceplot(misl_imp)
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
traceplot(misl_imp)
misl_modeling <- lapply(misl_imp, function(y){
stats::lm(TotChol ~ Age + Weight + Height + Smoke100 + Education, data = y$datasets)
})
summary(mice::pool(misl_modeling))
mice_fit <- with(mice_imp, exp = lm(TotChol ~ Age + Weight + Height + Smoke100 + Education))
summary(mice::pool(mice_fit), conf.int = TRUE)
summary(mice::pool(misl_modeling), conf.int = TRUE)
summary(mice::pool(mice_fit), conf.int = TRUE)
summary(mice::pool(misl_modeling), conf.int = TRUE)["97.5 %"]
summary(mice::pool(misl_modeling), conf.int = TRUE)["97.5 %"] - summary(mice::pool(misl_modeling), conf.int = TRUE)["2.5 %"]
summary(mice::pool(mice_fit), conf.int = TRUE)["97.5 %"] - summary(mice::pool(mice_fit), conf.int = TRUE)["2.5 %"]
traceplot()
traceplot(misl_imp)
load_all()
build()
build(vignettes = FALSE)
if(TRUE){print("HI")}
library('mice')
library('misl')
library('dplyr')
library("sl3")
library("future")
abalone <- read.csv("../../../raw-data/abalone.data", header=FALSE)
abalone <- read.csv("../../raw-data/abalone.data", header=FALSE)
getwd()
cd("/Users/thomascarpenito/Documents/Northeastern/Dissertation/MISL Paper")
setwd("/Users/thomascarpenito/Documents/Northeastern/Dissertation/MISL Paper")
abalone <- read.csv("raw-data/abalone.data", header=FALSE)
colnames(abalone) <- c("Sex", "Length", "Diameter", "Height", "Whole_Weight", "Shuck_Weight", "Viscera_Weight", "Shell_Weight", "Rings")
abalone <- abalone %>%
dplyr::mutate(Age = Rings + 1.5,
Sex = as.factor(Sex),
Older_12 = as.integer(Age > 12)
) %>%
select(-c(Rings, Age))
abalone <- dplyr::tibble(abalone)
original_model <- lm(Whole_Weight ~ Sex + Length + Diameter + Height + Older_12, data = abalone)
predictions <- predict(original_model)
abalone_model_predictions <- abalone %>%
select(c(Sex, Length, Diameter, Height, Older_12))
abalone_model_predictions$Whole_Weight_Pred <- predictions
truth_model <- lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12, data = abalone_model_predictions)
simulation <- function(runs = 2){
# First, setup our results array
results <- array(NA, dim = c(3, runs, 3 ))
dimnames(results) <- list(c("Mean.Imp", "Mice.Imp", "Misl.Imp"),
as.character(1:runs),
c("Estimate", "2.5 %", "97.5 %")
)
# Next begin our run through each of the simulations
for(run in 1:runs){
mypatterns <- expand.grid(Sex = 0:1, Length = 0:1, Diameter = 0:1, Height = 0:1, Older_12 = 0:1, Whole_Weight_Pred = 0:1)
mypatterns <- mypatterns[sample(1:nrow(mypatterns), replace = FALSE, 8),]
mypatterns <- mypatterns[rowSums(mypatterns) != 0,]
# We begin first with amputing our data
amputed_mads <- ampute(abalone_model_predictions,
prop = .20,
patterns = mypatterns,
mech = "MAR")
# We can then begin the imputation
amputed_data <- amputed_mads$amp
amputed_data$Sex <- factor(amputed_data$Sex, labels =  levels(abalone_model_predictions$Sex))
mean_imputations <- mice(amputed_data, method = c("sample", "mean", "mean", "mean", "sample", "mean"), print = FALSE)
mice_imputations <- mice(amputed_data, print = FALSE)
#plan(list(tweak(multisession, workers = 5),tweak(multisession, workers = 3)))
misl_imputations <- misl(amputed_data,
m = 5,
maxit = 5,
con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_glm"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
# We can then begin the fitting process
mean_fit <- with(mean_imputations, exp = lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12))
mice_fit <- with(mice_imputations, exp = lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12))
misl_fit <- lapply(misl_imputations, function(y){
stats::lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12, data = y)
})
# The results can be pooled
mean_pool <- summary(mice::pool(mean_fit), conf.int = TRUE)
mice_pool <- summary(mice::pool(mice_fit), conf.int = TRUE)
misl_pool <- summary(mice::pool(misl_fit), conf.int = TRUE)
# Finally, we can append our results to the array
results[1, run,] <- as.numeric(mean_pool[4, c("estimate", "2.5 %", "97.5 %")])
results[2, run,] <- as.numeric(mice_pool[4, c("estimate", "2.5 %", "97.5 %")])
results[3, run,] <- as.numeric(misl_pool[4, c("estimate", "2.5 %", "97.5 %")])
}
results
}
plan(list(tweak(multisession, workers = 5), sequential))
mar_20_1 <- simulation(2)
runs <- 2
# First, setup our results array
results <- array(NA, dim = c(3, runs, 3 ))
dimnames(results) <- list(c("Mean.Imp", "Mice.Imp", "Misl.Imp"),
as.character(1:runs),
c("Estimate", "2.5 %", "97.5 %")
)
run <- 1
mypatterns <- expand.grid(Sex = 0:1, Length = 0:1, Diameter = 0:1, Height = 0:1, Older_12 = 0:1, Whole_Weight_Pred = 0:1)
mypatterns <- mypatterns[sample(1:nrow(mypatterns), replace = FALSE, 8),]
mypatterns <- mypatterns[rowSums(mypatterns) != 0,]
# We begin first with amputing our data
amputed_mads <- ampute(abalone_model_predictions,
prop = .20,
patterns = mypatterns,
mech = "MAR")
# We can then begin the imputation
amputed_data <- amputed_mads$amp
amputed_data$Sex <- factor(amputed_data$Sex, labels =  levels(abalone_model_predictions$Sex))
mean_imputations <- mice(amputed_data, method = c("sample", "mean", "mean", "mean", "sample", "mean"), print = FALSE)
mice_imputations <- mice(amputed_data, print = FALSE)
#plan(list(tweak(multisession, workers = 5),tweak(multisession, workers = 3)))
misl_imputations <- misl(amputed_data,
m = 5,
maxit = 5,
con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_glm"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
traceplot(misl_imputations)
# We can then begin the fitting process
mean_fit <- with(mean_imputations, exp = lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12))
mice_fit <- with(mice_imputations, exp = lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12))
misl_fit <- lapply(misl_imputations, function(y){
stats::lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12, data = y)
})
misl_fit <- lapply(misl_imputations, function(y){
stats::lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12, data = y$datasets)
})
# The results can be pooled
mean_pool <- summary(mice::pool(mean_fit), conf.int = TRUE)
mice_pool <- summary(mice::pool(mice_fit), conf.int = TRUE)
misl_pool <- summary(mice::pool(misl_fit), conf.int = TRUE)
# Finally, we can append our results to the array
results[1, run,] <- as.numeric(mean_pool[4, c("estimate", "2.5 %", "97.5 %")])
results[2, run,] <- as.numeric(mice_pool[4, c("estimate", "2.5 %", "97.5 %")])
results[3, run,] <- as.numeric(misl_pool[4, c("estimate", "2.5 %", "97.5 %")])
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
plot <- long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_wrap(variable ~ statistic , scales = "free", ncol = 2) +
theme_bw()
return(plot)
}
library('devtools')
document()
document()
library("devtools")
library("ggplot")
library("ggplot2")
use_package("ggplot2")
document()
load()
load_all()
library('devtools')
colnames(nhanes)
load_all()
colnames(nhanes)
colnames(nhanes)[order(colSums(is.na(nhanes)))]
[order(colSums(is.na(nhanes)))]
order(colSums(is.na(nhanes)))
colSums(is.na(nhanes))
which(colSums(is.na(nhanes))==0)
c(which(colSums(is.na(nhanes))==0))
a <- which(colSums(is.na(nhanes))==0)
a
str(a)
a
a[1]
colSums(is.na(dataset)))
colSums(is.na(dataset))
colSums(is.na(nhanes))
colSums(is.na(nhanes)) != 0
colnames(nhanes(colSums(is.na(nhanes)) != 0))
colnames(nhanes)(colSums(is.na(nhanes)) != 0)
colnames(nhanes)[colSums(is.na(nhanes)) != 0]
colnames(nhanes)(order(colSums(is.na(nhanes)) != 0))
colnames(nhanes)[colSums(is.na(nhanes)) != 0]
colnames(nhanes)[(colSums(is.na(nhanes)) != 0)]
colnames(nhanes)[order(colSums(is.na(nhanes)) != 0)]
colnames(nhanes)[order(colSums(is.na(nhanes) != 0))]
colnames(nhanes)[(colSums(is.na(nhanes) != 0)]
colnames(nhanes)[(colSums(is.na(nhanes) != 0))]
colnames(nhanes)[colSums(is.na(nhanes)) != 0]
colSums(is.na(nhanes)) != 0
load_all()
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
misl_modeling <- lapply(misl_imp, function(y){
stats::lm(TotChol ~ Age + Weight + Height + Smoke100 + Education, data = y$datasets)
})
summary(mice::pool(misl_modeling), conf.int = TRUE)
traceplot(misl_imp)
load_all()
traceplot(misl_imp)
?aes
load_all()
traceplot(misl_imp)
load_all()
traceplot(misl_imp)
mice_imp <- mice(nhanes)
library('mice')
mice_imp <- mice(misl::nhanes)
plot(mice_imp)
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
misl_imp
traceplot(misl_imp)
sl3::sl3_list_learners("continuous")
library("sl3")
sl3::sl3_list_learners("continuous")
colnames(dataset)[order(colSums(is.na(dataset)))]
dataset <- nhanes
colnames(dataset)[order(colSums(is.na(dataset)))]
order(colSums(is.na(dataset)))
colSums(is.na(dataset))
colnames(dataset)
?colSums
?order
colnames(dataset)[colSums(is.na(dataset))]
colSums(is.na(dataset))
colnames(dataset)[colSums(is.na(dataset))==0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order
skipped_columns <- colnames(dataset)[colSums(is.na(dataset))==0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order <- column_order %notin% skipped_columns
skipped_columns <- colnames(dataset)[colSums(is.na(dataset))==0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
skipped_columns
column_order
skipped_columns <- colnames(dataset)[colSums(is.na(dataset))==0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order <- column_order[column_order!= skipped_columns]
column_order
skipped_columns
skipped_columns <- colnames(dataset)[colSums(is.na(dataset))!=0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order <- column_order[column_order!= skipped_columns]
column_order
skipped_columns <- colnames(dataset)[colSums(is.na(dataset))!=0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order <- column_order[column_order! %in% skipped_columns]
skipped_columns <- colnames(dataset)[colSums(is.na(dataset))!=0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order <- column_order[column_order !%in% skipped_columns]
skipped_columns <- colnames(dataset)[colSums(is.na(dataset))!=0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order <- column_order[column_order %in% skipped_columns]
skipped_columns
imputed_columns <- colnames(dataset)[colSums(is.na(dataset))!=0]
missing_columns <- colnames(dataset)[colSums(is.na(dataset))!=0]
missing_columns
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order
missing_columns <- colnames(dataset)[colSums(is.na(dataset))!=0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order <- column_order[column_order %in% missing_columns]
column_order
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_ranger"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
misl_imp
View(misl_imp[1])
View(misl_imp[[1]])
View(misl_imp[[1]]$datasets)
View(misl_imp[[2]]$datasets)
View(misl_imp[[3]]$datasets)
traceplot(misl_imp)
mice_imp <- mice(misl::nhanes)
plot(mice_imp)
misl_imp2 <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_ranger"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
plan(list(tweak(multisession, workers = 5), sequential))
par_seq <- misl(nhanes, con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_ranger"), quiet = FALSE)
library(future)
plan(list(tweak(multisession, workers = 5), sequential))
par_seq <- misl(nhanes, con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_ranger"), quiet = FALSE)
load()
library('devtools')
load()
load_all()
build()
build(vignettes = FALSE)
library(future)
load_all()
library('devtools')
load_all()
plan(list(tweak(multisession, workers = 4), sequential))
misl_imp2 <- misl(nhanes, maxit = 5, m = 4, quiet = FALSE,
con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth", "Lrnr_glmnet", "Lrnr_polspline"),
bin_method = c("Lrnr_mean", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_independent_binomial", "Lrnr_mean"))
misl_modeling <- lapply(misl_imp, function(y){
stats::lm(TotChol ~ Age + Weight + Height + Smoke100 + Education, data = y$datasets)
})
misl_modeling <- lapply(misl_imp2, function(y){
stats::lm(TotChol ~ Age + Weight + Height + Smoke100 + Education, data = y$datasets)
})
summary(mice::pool(misl_modeling), conf.int = TRUE)
traceplot(misl_imp2)
traceplot(misl_imp2)
mice_imp <- mice(misl::nhanes)
library("mice")
mice_imp <- mice(misl::nhanes)
plot(mice_imp)
traceplot(misl_imp2)
dataset <- misl::nhanes
missing_columns <- colnames(dataset)[colSums(is.na(dataset))!=0]
column_order <- colnames(dataset)[order(colSums(is.na(dataset)))]
column_order <- column_order[column_order %in% missing_columns]
column_order
column_order
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
reverse(column_order)
column_order <- sample(column_order)
column_order
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
sample(column_order)
load_all()
plan(list(tweak(multisession, workers = 4), sequential))
misl_imp <- misl(nhanes, maxit = 5, m = 4, quiet = FALSE,
con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth", "Lrnr_glmnet", "Lrnr_polspline"),
bin_method = c("Lrnr_mean", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_independent_binomial", "Lrnr_mean"))
misl_modeling <- lapply(misl_imp, function(y){
stats::lm(TotChol ~ Age + Weight + Height + Smoke100 + Education, data = y$datasets)
})
summary(mice::pool(misl_modeling), conf.int = TRUE)
traceplot(misl_imp)
mice_modeling <- mice(misl::nhanes)
with(mice_modeling, expr = lm(TotChol ~ Age + Weight + Height + Smoke100 + Education))
summary(pool(with(mice_modeling, expr = lm(TotChol ~ Age + Weight + Height + Smoke100 + Education))))
summary(pool(with(mice_modeling, expr = lm(TotChol ~ Age + Weight + Height + Smoke100 + Education))), conf.int = TRUE)
summary(pool(with(mice_modeling, expr = lm(TotChol ~ Age + Weight + Height + Smoke100 + Education))), conf.int = TRUE)[,8]
summary(pool(with(mice_modeling, expr = lm(TotChol ~ Age + Weight + Height + Smoke100 + Education))), conf.int = TRUE)[,8] - summary(pool(with(mice_modeling, expr = lm(TotChol ~ Age + Weight + Height + Smoke100 + Education))), conf.int = TRUE)[,7]
summary(mice::pool(misl_modeling), conf.int = TRUE)[,8] - summary(mice::pool(misl_modeling), conf.int = TRUE)[,7]
load_all()
plan(list(tweak(multisession, workers = 4), sequential))
misl_imp <- misl(nhanes, maxit = 5, m = 4, quiet = FALSE,
con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth", "Lrnr_glmnet", "Lrnr_polspline"),
bin_method = c("Lrnr_mean", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_independent_binomial", "Lrnr_mean"))
summary(mice::pool(misl_modeling), conf.int = TRUE)[,8] - summary(mice::pool(misl_modeling), conf.int = TRUE)[,7]
misl_modeling <- lapply(misl_imp, function(y){
stats::lm(TotChol ~ Age + Weight + Height + Smoke100 + Education, data = y$datasets)
})
misl_modeling <- lapply(misl_imp, function(y){
stats::lm(TotChol ~ Age + Weight + Height + Smoke100 + Education, data = y$datasets)
})
summary(mice::pool(misl_modeling), conf.int = TRUE)
summary(mice::pool(misl_modeling), conf.int = TRUE)[,8] - summary(mice::pool(misl_modeling), conf.int = TRUE)[,7]
library("abind")
setwd("/Users/thomascarpenito/Documents/Northeastern/Dissertation/MISL Paper/simulation_results/")
load("truth.Rdata")
true <- truth_model$coefficients[4]
organize_results <- function(combined){
RB <- rowMeans(combined[,, "Estimate"]) - true
PB <- 100 * abs((rowMeans(combined[,, "Estimate"]) - true)/ true)
CR <- rowMeans(combined[,, "2.5 %"] < true & true < combined[,, "97.5 %"])
AW <- rowMeans(combined[,, "97.5 %"] - combined[,, "2.5 %"])
results <- data.frame(RB, PB, CR, AW)
return(results)
}
mar_20 <- list.files("MAR/mar/", pattern = "mar_20..\\.Rdata", full.names = TRUE)
mar_40 <- list.files("MAR/mar/", pattern = "mar_40..\\.Rdata", full.names = TRUE)
mar_60 <- list.files("MAR/mar/", pattern = "mar_60..\\.Rdata", full.names = TRUE)
for(file in c(mar_20, mar_40,mar_60 )){
load(file)
}
combined_mar_20 <- abind(mar_20_1, mar_20_2, mar_20_3, mar_20_4, mar_20_5, along = 2)
combined_mar_40 <- abind(mar_40_1, mar_40_2, mar_40_3, mar_40_4, mar_40_5, along = 2)
combined_mar_60 <- abind(mar_60_1, mar_60_2, mar_60_3, mar_60_4, mar_60_5, along = 2)
mar_20 <- organize_results(combined_mar_20)
mar_40 <- organize_results(combined_mar_40)
mar_60 <- organize_results(combined_mar_60)
View(mar_40)
library("tidyverse")
library("ranger")
library("mice")
library("kableExtra")
library("sl3")
library("caret")
library("cluster")
library("factoextra")
library("compareGroups")
set.seed(1234)
# Load the dataset
load("/Users/thomascarpenito/Documents/Northeastern/Dissertation/Firearm/Data/ICPSR_37694/DS0001/37694-0001-Data.rda")
neiss_original <- da37694.0001
table(neiss_original$BB_GSW)
table(neiss_original$FA_GSW)
