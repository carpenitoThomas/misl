#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, imputations$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, imputations$trace)
}
print(long_dataframe)
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
misl_imp
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
print(long_dataframe)
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
load_all()
View(long_dataframe)
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE)
traceplot(misl_imp)
traceplot(misl_imp)
load_all()
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_glm", "Lrnr_earth"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
traceplot(misl_imp)
traceplot(misl_imp)
sample(nhanes$Age)
sample(nhanes$Education,1)
sample(nhanes$Education,1)
sample(nhanes$Education,1)
sample(nhanes$Education,1)
sample(nhanes$Education,1)
sample(nhanes$Education,1)
sample(nhanes$Education,1)
sample(nhanes$Education,1)
sample(nhanes$Education,1, na.rm = TRUE)
sample(nhanes$Education[!is.na[nhanes$Education]],1)
nhanes$Education[!is.na[nhanes$Education]]
sample(nhanes[!is.na[nhanes$Education]],1)
sample(nhanes[!is.na[nhanes$Education]]$Education,1)
sample(nhanes$Education[!is.na(nhanes$Education)],1)
sample(nhanes$Education[!is.na(nhanes$Education)],1)
sample(nhanes$Education[!is.na(nhanes$Education)],1)
sample(nhanes$Education[!is.na(nhanes$Education)],1)
dataset <- nhanes
column_number <- 2
impute_mode(dataset[[column_number]])
impute_mode(dataset[[column_number]])
impute_mode(dataset[[column_number]])
impute_mode(dataset[[column_number]])
impute_mode(dataset[[column_number]])
impute_mode(dataset[[column_number]])
impute_mode(dataset[[column_number]])
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
View(dataset)
column_number <- 5
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
sample(dataset[[column_number]][!is.na(dataset[[column_number]])], 1)
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_glm", "Lrnr_earth"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
traceplot(misl_imp)
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations Results of the MISL imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(. ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free") +
theme_bw()
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations Results of the MISL imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
?facet_grid
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free", space = "free") +
theme_bw()
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations Results of the MISL imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free", space = "free") +
theme_bw()
}
traceplot(misl_imp)
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations Results of the MISL imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_grid(variable ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations Results of the MISL imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_wrap(variable ~ statistic , scales = "free") +
theme_bw()
}
traceplot(misl_imp)
?facet_wrap
#' Creates a traceplot using the imputations from MISL
#'
#' @param imputations Results of the MISL imputations
#'
#' @return
#' @export
#'
#' @examples
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_wrap(variable ~ statistic , scales = "free", ncol = 2) +
theme_bw()
}
traceplot(misl_imp)
load_all()
library(misl)
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean", "Lrnr_ranger"))
system.time(print("tomm"))
system.time(misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean", "Lrnr_ranger"))
)
load_all()
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_earth"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
traceplot(misl_imp)
?mice
?mice.impute.myfunc
mice_imp <- mice(misl::nhanes)
plot(mice_imp)
plot(misl_imp)
traceplot(misl_imp)
misl_imp <- misl(nhanes, maxit = 5, m = 5, quiet = FALSE,con_method = c("Lrnr_mean", "Lrnr_glm_fast"),
bin_method = c("Lrnr_mean", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
traceplot(misl_imp)
misl_modeling <- lapply(misl_imp, function(y){
stats::lm(TotChol ~ Age + Weight + Height + Smoke100 + Education, data = y$datasets)
})
summary(mice::pool(misl_modeling))
mice_fit <- with(mice_imp, exp = lm(TotChol ~ Age + Weight + Height + Smoke100 + Education))
summary(mice::pool(mice_fit), conf.int = TRUE)
summary(mice::pool(misl_modeling), conf.int = TRUE)
summary(mice::pool(mice_fit), conf.int = TRUE)
summary(mice::pool(misl_modeling), conf.int = TRUE)["97.5 %"]
summary(mice::pool(misl_modeling), conf.int = TRUE)["97.5 %"] - summary(mice::pool(misl_modeling), conf.int = TRUE)["2.5 %"]
summary(mice::pool(mice_fit), conf.int = TRUE)["97.5 %"] - summary(mice::pool(mice_fit), conf.int = TRUE)["2.5 %"]
traceplot()
traceplot(misl_imp)
load_all()
build()
build(vignettes = FALSE)
if(TRUE){print("HI")}
library('mice')
library('misl')
library('dplyr')
library("sl3")
library("future")
abalone <- read.csv("../../../raw-data/abalone.data", header=FALSE)
abalone <- read.csv("../../raw-data/abalone.data", header=FALSE)
getwd()
cd("/Users/thomascarpenito/Documents/Northeastern/Dissertation/MISL Paper")
setwd("/Users/thomascarpenito/Documents/Northeastern/Dissertation/MISL Paper")
abalone <- read.csv("raw-data/abalone.data", header=FALSE)
colnames(abalone) <- c("Sex", "Length", "Diameter", "Height", "Whole_Weight", "Shuck_Weight", "Viscera_Weight", "Shell_Weight", "Rings")
abalone <- abalone %>%
dplyr::mutate(Age = Rings + 1.5,
Sex = as.factor(Sex),
Older_12 = as.integer(Age > 12)
) %>%
select(-c(Rings, Age))
abalone <- dplyr::tibble(abalone)
original_model <- lm(Whole_Weight ~ Sex + Length + Diameter + Height + Older_12, data = abalone)
predictions <- predict(original_model)
abalone_model_predictions <- abalone %>%
select(c(Sex, Length, Diameter, Height, Older_12))
abalone_model_predictions$Whole_Weight_Pred <- predictions
truth_model <- lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12, data = abalone_model_predictions)
simulation <- function(runs = 2){
# First, setup our results array
results <- array(NA, dim = c(3, runs, 3 ))
dimnames(results) <- list(c("Mean.Imp", "Mice.Imp", "Misl.Imp"),
as.character(1:runs),
c("Estimate", "2.5 %", "97.5 %")
)
# Next begin our run through each of the simulations
for(run in 1:runs){
mypatterns <- expand.grid(Sex = 0:1, Length = 0:1, Diameter = 0:1, Height = 0:1, Older_12 = 0:1, Whole_Weight_Pred = 0:1)
mypatterns <- mypatterns[sample(1:nrow(mypatterns), replace = FALSE, 8),]
mypatterns <- mypatterns[rowSums(mypatterns) != 0,]
# We begin first with amputing our data
amputed_mads <- ampute(abalone_model_predictions,
prop = .20,
patterns = mypatterns,
mech = "MAR")
# We can then begin the imputation
amputed_data <- amputed_mads$amp
amputed_data$Sex <- factor(amputed_data$Sex, labels =  levels(abalone_model_predictions$Sex))
mean_imputations <- mice(amputed_data, method = c("sample", "mean", "mean", "mean", "sample", "mean"), print = FALSE)
mice_imputations <- mice(amputed_data, print = FALSE)
#plan(list(tweak(multisession, workers = 5),tweak(multisession, workers = 3)))
misl_imputations <- misl(amputed_data,
m = 5,
maxit = 5,
con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_glm"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
# We can then begin the fitting process
mean_fit <- with(mean_imputations, exp = lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12))
mice_fit <- with(mice_imputations, exp = lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12))
misl_fit <- lapply(misl_imputations, function(y){
stats::lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12, data = y)
})
# The results can be pooled
mean_pool <- summary(mice::pool(mean_fit), conf.int = TRUE)
mice_pool <- summary(mice::pool(mice_fit), conf.int = TRUE)
misl_pool <- summary(mice::pool(misl_fit), conf.int = TRUE)
# Finally, we can append our results to the array
results[1, run,] <- as.numeric(mean_pool[4, c("estimate", "2.5 %", "97.5 %")])
results[2, run,] <- as.numeric(mice_pool[4, c("estimate", "2.5 %", "97.5 %")])
results[3, run,] <- as.numeric(misl_pool[4, c("estimate", "2.5 %", "97.5 %")])
}
results
}
plan(list(tweak(multisession, workers = 5), sequential))
mar_20_1 <- simulation(2)
runs <- 2
# First, setup our results array
results <- array(NA, dim = c(3, runs, 3 ))
dimnames(results) <- list(c("Mean.Imp", "Mice.Imp", "Misl.Imp"),
as.character(1:runs),
c("Estimate", "2.5 %", "97.5 %")
)
run <- 1
mypatterns <- expand.grid(Sex = 0:1, Length = 0:1, Diameter = 0:1, Height = 0:1, Older_12 = 0:1, Whole_Weight_Pred = 0:1)
mypatterns <- mypatterns[sample(1:nrow(mypatterns), replace = FALSE, 8),]
mypatterns <- mypatterns[rowSums(mypatterns) != 0,]
# We begin first with amputing our data
amputed_mads <- ampute(abalone_model_predictions,
prop = .20,
patterns = mypatterns,
mech = "MAR")
# We can then begin the imputation
amputed_data <- amputed_mads$amp
amputed_data$Sex <- factor(amputed_data$Sex, labels =  levels(abalone_model_predictions$Sex))
mean_imputations <- mice(amputed_data, method = c("sample", "mean", "mean", "mean", "sample", "mean"), print = FALSE)
mice_imputations <- mice(amputed_data, print = FALSE)
#plan(list(tweak(multisession, workers = 5),tweak(multisession, workers = 3)))
misl_imputations <- misl(amputed_data,
m = 5,
maxit = 5,
con_method = c("Lrnr_mean", "Lrnr_glm_fast", "Lrnr_glm"),
bin_method = c("Lrnr_mean", "Lrnr_glm", "Lrnr_earth", "Lrnr_glm_fast"),
cat_method = c("Lrnr_mean"))
traceplot(misl_imputations)
# We can then begin the fitting process
mean_fit <- with(mean_imputations, exp = lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12))
mice_fit <- with(mice_imputations, exp = lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12))
misl_fit <- lapply(misl_imputations, function(y){
stats::lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12, data = y)
})
misl_fit <- lapply(misl_imputations, function(y){
stats::lm(Whole_Weight_Pred ~ Sex + Length + Diameter + Height + Older_12, data = y$datasets)
})
# The results can be pooled
mean_pool <- summary(mice::pool(mean_fit), conf.int = TRUE)
mice_pool <- summary(mice::pool(mice_fit), conf.int = TRUE)
misl_pool <- summary(mice::pool(misl_fit), conf.int = TRUE)
# Finally, we can append our results to the array
results[1, run,] <- as.numeric(mean_pool[4, c("estimate", "2.5 %", "97.5 %")])
results[2, run,] <- as.numeric(mice_pool[4, c("estimate", "2.5 %", "97.5 %")])
results[3, run,] <- as.numeric(misl_pool[4, c("estimate", "2.5 %", "97.5 %")])
traceplot <- function(imputations){
long_dataframe <- data.frame()
for(mdatasets in imputations){
long_dataframe <- rbind(long_dataframe, mdatasets$trace)
}
plot <- long_dataframe %>%
mutate(m = as.factor(m)) %>%
filter(!is.na(value)) %>%
ggplot(aes(x = iteration, y = value, group = m, color= m)) +
geom_line() +
geom_point() +
facet_wrap(variable ~ statistic , scales = "free", ncol = 2) +
theme_bw()
return(plot)
}
library('devtools')
document()
document()
library("devtools")
library("ggplot")
library("ggplot2")
use_package("ggplot2")
document()
load()
load_all()
